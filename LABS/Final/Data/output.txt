                                   FOLLOW SET: 
mainFunc <---> [ $ ]
what <---> [ int, float, return, ;, char, input, boolean, identifier, string, if, print, for, while ]
TEMP <---> [ ) ]
ARGS <---> [ ) ]
operation <---> [ identifier, constant ]
PRINT <---> [ return, input, identifier, if, print, for, while, } ]
equalTo <---> [ int, float, return, ;, char, input, boolean, identifier, string, if, print, for, while ]
type <---> [ identifier ]
id_or_const <---> [ float, return, --, !=, ==, boolean, identifier, >, string, if, while, %, ++, int, ), char, input, >=, /, <, print, for, ;, +, ,, }, *, -, <= ]
expression <---> [ float, return, !=, ==, boolean, identifier, string, if, while, <=, int, ), char, input, >=, <, print, for, ;, }, > ]
operationOrSign <---> [ float, return, !=, ==, boolean, identifier, string, if, while, <=, int, ), char, input, >=, <, print, for, ;, }, > ]
declare_rule <---> [ int, float, return, ;, char, input, boolean, identifier, string, if, print, for, while ]
declareVars <---> [ return, input, identifier, if, print, for, while ]
statement <---> [ return, input, identifier, if, print, for, while, } ]
if_statement <---> [ return, input, identifier, if, print, for, while, } ]
while_statement <---> [ return, input, identifier, if, print, for, while, } ]
for_statement <---> [ return, input, identifier, if, print, for, while, } ]
assignment_statement <---> [ return, input, identifier, if, print, for, while, } ]
user_inter_statment <---> [ return, input, identifier, if, print, for, while, } ]
statements <---> [ }, return ]
for_relation <---> [ identifier, constant ]
variableExist <---> [ ; ]
do_smth <---> [ ) ]
else_statement <---> [ return, input, identifier, if, print, for, while, } ]
condition <---> [ ) ]
relation <---> [ identifier, constant ]
else_if_statement <---> [ return, input, else, identifier, if, print, for, while, } ]




                                    FIRST SET: 
mainFunc <---> [ int ]
what <---> [ True, identifier, constant, False ]
TEMP <---> [ epsilon, , ]
ARGS <---> [ args, epsilon ]
operation <---> [ /, +, %, *, - ]
PRINT <---> [ print ]
equalTo <---> [ =, epsilon ]
type <---> [ int, float, char, boolean, string ]
id_or_const <---> [ identifier, constant ]
expression <---> [ identifier, constant ]
operationOrSign <---> [ *, +, %, epsilon, /, - ]
declare_rule <---> [ int, string, float, char, boolean ]
declareVars <---> [ int, string, float, char, epsilon, boolean ]
statement <---> [ if, print, for, while, input, identifier ]
if_statement <---> [ if ]
while_statement <---> [ while ]
for_statement <---> [ for ]
assignment_statement <---> [ identifier ]
user_inter_statment <---> [ input, print ]
statements <---> [ if, print, for, while, input, epsilon, identifier ]
for_relation <---> [ <, <=, >=, > ]
variableExist <---> [ int, string, float, identifier, char, boolean ]
do_smth <---> [ ++, --, +, - ]
else_statement <---> [ epsilon, else ]
condition <---> [ identifier, constant ]
relation <---> [ !=, ==, >=, >, <, <= ]
else_if_statement <---> [ epsilon, else ]




                                    PARSE TABLE: 
NTS                   int                                                                    main           args           float                              boolean                            char                               string                             input                           print                                 return             Add            =                +                              ++             --             -                              *                              /                              %                              (              )                  {              }                  "              '              ||             &&             ==                !=                <                 >                 <=                >=                if                                                                          else                           while                                         for                                                                                                        identifier                                constant                                  True           False           ;                 ,                             $

mainFunc              ('int main ( ARGS ) { declareVars statements return constant }', '0')  ('err', '-1')  ('err', '-1')  ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                   ('err', '-1')                         ('err', '-1')      ('err', '-1')  ('err', '-1')    ('err', '-1')                  ('err', '-1')  ('err', '-1')  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')                                                               ('err', '-1')                  ('err', '-1')                                 ('err', '-1')                                                                                              ('err', '-1')                             ('err', '-1')                             ('err', '-1')  ('err', '-1')   ('err', '-1')     ('err', '-1')                 ('err', '-1')
what                  ('err', '-1')                                                          ('err', '-1')  ('err', '-1')  ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                   ('err', '-1')                         ('err', '-1')      ('err', '-1')  ('err', '-1')    ('err', '-1')                  ('err', '-1')  ('err', '-1')  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')                                                               ('err', '-1')                  ('err', '-1')                                 ('err', '-1')                                                                                              ('expression', '6')                       ('expression', '6')                       ('True', '6')  ('False', '6')  ('err', '-1')     ('err', '-1')                 ('err', '-1')
TEMP                  ('err', '-1')                                                          ('err', '-1')  ('err', '-1')  ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                   ('err', '-1')                         ('err', '-1')      ('err', '-1')  ('err', '-1')    ('err', '-1')                  ('err', '-1')  ('err', '-1')  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('epsilon', '26')  ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')                                                               ('err', '-1')                  ('err', '-1')                                 ('err', '-1')                                                                                              ('err', '-1')                             ('err', '-1')                             ('err', '-1')  ('err', '-1')   ('err', '-1')     (', id_or_const TEMP', '26')  ('err', '-1')
ARGS                  ('err', '-1')                                                          ('err', '-1')  ('args', '1')  ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                   ('err', '-1')                         ('err', '-1')      ('err', '-1')  ('err', '-1')    ('err', '-1')                  ('err', '-1')  ('err', '-1')  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('epsilon', '1')   ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')                                                               ('err', '-1')                  ('err', '-1')                                 ('err', '-1')                                                                                              ('err', '-1')                             ('err', '-1')                             ('err', '-1')  ('err', '-1')   ('err', '-1')     ('err', '-1')                 ('err', '-1')
operation             ('err', '-1')                                                          ('err', '-1')  ('err', '-1')  ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                   ('err', '-1')                         ('err', '-1')      ('err', '-1')  ('err', '-1')    ('+', '10')                    ('err', '-1')  ('err', '-1')  ('-', '10')                    ('*', '10')                    ('/', '10')                    ('%', '10')                    ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')                                                               ('err', '-1')                  ('err', '-1')                                 ('err', '-1')                                                                                              ('err', '-1')                             ('err', '-1')                             ('err', '-1')  ('err', '-1')   ('err', '-1')     ('err', '-1')                 ('err', '-1')
PRINT                 ('err', '-1')                                                          ('err', '-1')  ('err', '-1')  ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                   ('print ( id_or_const TEMP )', '25')  ('err', '-1')      ('err', '-1')  ('err', '-1')    ('err', '-1')                  ('err', '-1')  ('err', '-1')  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')                                                               ('err', '-1')                  ('err', '-1')                                 ('err', '-1')                                                                                              ('err', '-1')                             ('err', '-1')                             ('err', '-1')  ('err', '-1')   ('err', '-1')     ('err', '-1')                 ('err', '-1')
equalTo               ('epsilon', '5')                                                       ('err', '-1')  ('err', '-1')  ('epsilon', '5')                   ('epsilon', '5')                   ('epsilon', '5')                   ('epsilon', '5')                   ('epsilon', '5')                ('epsilon', '5')                      ('epsilon', '5')   ('err', '-1')  ('= what', '5')  ('err', '-1')                  ('err', '-1')  ('err', '-1')  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('epsilon', '5')                                                            ('err', '-1')                  ('epsilon', '5')                              ('epsilon', '5')                                                                                           ('epsilon', '5')                          ('err', '-1')                             ('err', '-1')  ('err', '-1')   ('epsilon', '5')  ('err', '-1')                 ('err', '-1')
type                  ('int', '4')                                                           ('err', '-1')  ('err', '-1')  ('float', '4')                     ('boolean', '4')                   ('char', '4')                      ('string', '4')                    ('err', '-1')                   ('err', '-1')                         ('err', '-1')      ('err', '-1')  ('err', '-1')    ('err', '-1')                  ('err', '-1')  ('err', '-1')  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')                                                               ('err', '-1')                  ('err', '-1')                                 ('err', '-1')                                                                                              ('err', '-1')                             ('err', '-1')                             ('err', '-1')  ('err', '-1')   ('err', '-1')     ('err', '-1')                 ('err', '-1')
id_or_const           ('err', '-1')                                                          ('err', '-1')  ('err', '-1')  ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                   ('err', '-1')                         ('err', '-1')      ('err', '-1')  ('err', '-1')    ('err', '-1')                  ('err', '-1')  ('err', '-1')  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')                                                               ('err', '-1')                  ('err', '-1')                                 ('err', '-1')                                                                                              ('identifier', '8')                       ('constant', '8')                         ('err', '-1')  ('err', '-1')   ('err', '-1')     ('err', '-1')                 ('err', '-1')
expression            ('err', '-1')                                                          ('err', '-1')  ('err', '-1')  ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                   ('err', '-1')                         ('err', '-1')      ('err', '-1')  ('err', '-1')    ('err', '-1')                  ('err', '-1')  ('err', '-1')  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')                                                               ('err', '-1')                  ('err', '-1')                                 ('err', '-1')                                                                                              ('id_or_const operationOrSign', '7')      ('id_or_const operationOrSign', '7')      ('err', '-1')  ('err', '-1')   ('err', '-1')     ('err', '-1')                 ('err', '-1')
operationOrSign       ('epsilon', '9')                                                       ('err', '-1')  ('err', '-1')  ('epsilon', '9')                   ('epsilon', '9')                   ('epsilon', '9')                   ('epsilon', '9')                   ('epsilon', '9')                ('epsilon', '9')                      ('epsilon', '9')   ('err', '-1')  ('err', '-1')    ('operation expression', '9')  ('err', '-1')  ('err', '-1')  ('operation expression', '9')  ('operation expression', '9')  ('operation expression', '9')  ('operation expression', '9')  ('err', '-1')  ('epsilon', '9')   ('err', '-1')  ('epsilon', '9')   ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('epsilon', '9')  ('epsilon', '9')  ('epsilon', '9')  ('epsilon', '9')  ('epsilon', '9')  ('epsilon', '9')  ('epsilon', '9')                                                            ('err', '-1')                  ('epsilon', '9')                              ('epsilon', '9')                                                                                           ('epsilon', '9')                          ('err', '-1')                             ('err', '-1')  ('err', '-1')   ('epsilon', '9')  ('err', '-1')                 ('err', '-1')
declare_rule          ('type identifier equalTo', '3')                                       ('err', '-1')  ('err', '-1')  ('type identifier equalTo', '3')   ('type identifier equalTo', '3')   ('type identifier equalTo', '3')   ('type identifier equalTo', '3')   ('err', '-1')                   ('err', '-1')                         ('err', '-1')      ('err', '-1')  ('err', '-1')    ('err', '-1')                  ('err', '-1')  ('err', '-1')  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')                                                               ('err', '-1')                  ('err', '-1')                                 ('err', '-1')                                                                                              ('err', '-1')                             ('err', '-1')                             ('err', '-1')  ('err', '-1')   ('err', '-1')     ('err', '-1')                 ('err', '-1')
declareVars           ('declare_rule declareVars', '2')                                      ('err', '-1')  ('err', '-1')  ('declare_rule declareVars', '2')  ('declare_rule declareVars', '2')  ('declare_rule declareVars', '2')  ('declare_rule declareVars', '2')  ('epsilon', '2')                ('epsilon', '2')                      ('epsilon', '2')   ('err', '-1')  ('err', '-1')    ('err', '-1')                  ('err', '-1')  ('err', '-1')  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('epsilon', '2')                                                            ('err', '-1')                  ('epsilon', '2')                              ('epsilon', '2')                                                                                           ('epsilon', '2')                          ('err', '-1')                             ('err', '-1')  ('err', '-1')   ('err', '-1')     ('err', '-1')                 ('err', '-1')
statement             ('err', '-1')                                                          ('err', '-1')  ('err', '-1')  ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('user_inter_statment', '12')   ('user_inter_statment', '12')         ('err', '-1')      ('err', '-1')  ('err', '-1')    ('err', '-1')                  ('err', '-1')  ('err', '-1')  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('if_statement', '12')                                                      ('err', '-1')                  ('while_statement', '12')                     ('for_statement', '12')                                                                                    ('assignment_statement', '12')            ('err', '-1')                             ('err', '-1')  ('err', '-1')   ('err', '-1')     ('err', '-1')                 ('err', '-1')
if_statement          ('err', '-1')                                                          ('err', '-1')  ('err', '-1')  ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                   ('err', '-1')                         ('err', '-1')      ('err', '-1')  ('err', '-1')    ('err', '-1')                  ('err', '-1')  ('err', '-1')  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('if ( condition ) { statements } else_if_statement else_statement', '13')  ('err', '-1')                  ('err', '-1')                                 ('err', '-1')                                                                                              ('err', '-1')                             ('err', '-1')                             ('err', '-1')  ('err', '-1')   ('err', '-1')     ('err', '-1')                 ('err', '-1')
while_statement       ('err', '-1')                                                          ('err', '-1')  ('err', '-1')  ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                   ('err', '-1')                         ('err', '-1')      ('err', '-1')  ('err', '-1')    ('err', '-1')                  ('err', '-1')  ('err', '-1')  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')                                                               ('err', '-1')                  ('while ( condition ) { statements }', '16')  ('err', '-1')                                                                                              ('err', '-1')                             ('err', '-1')                             ('err', '-1')  ('err', '-1')   ('err', '-1')     ('err', '-1')                 ('err', '-1')
for_statement         ('err', '-1')                                                          ('err', '-1')  ('err', '-1')  ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                   ('err', '-1')                         ('err', '-1')      ('err', '-1')  ('err', '-1')    ('err', '-1')                  ('err', '-1')  ('err', '-1')  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')                                                               ('err', '-1')                  ('err', '-1')                                 ('for ( variableExist ; identifier for_relation expression ; id_or_const do_smth ) { statements }', '19')  ('err', '-1')                             ('err', '-1')                             ('err', '-1')  ('err', '-1')   ('err', '-1')     ('err', '-1')                 ('err', '-1')
assignment_statement  ('err', '-1')                                                          ('err', '-1')  ('err', '-1')  ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                   ('err', '-1')                         ('err', '-1')      ('err', '-1')  ('err', '-1')    ('err', '-1')                  ('err', '-1')  ('err', '-1')  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')                                                               ('err', '-1')                  ('err', '-1')                                 ('err', '-1')                                                                                              ('identifier = expression', '23')         ('err', '-1')                             ('err', '-1')  ('err', '-1')   ('err', '-1')     ('err', '-1')                 ('err', '-1')
user_inter_statment   ('err', '-1')                                                          ('err', '-1')  ('err', '-1')  ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('input ( constant )', '24')    ('PRINT', '24')                       ('err', '-1')      ('err', '-1')  ('err', '-1')    ('err', '-1')                  ('err', '-1')  ('err', '-1')  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')                                                               ('err', '-1')                  ('err', '-1')                                 ('err', '-1')                                                                                              ('err', '-1')                             ('err', '-1')                             ('err', '-1')  ('err', '-1')   ('err', '-1')     ('err', '-1')                 ('err', '-1')
statements            ('err', '-1')                                                          ('err', '-1')  ('err', '-1')  ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('statement statements', '11')  ('statement statements', '11')        ('epsilon', '11')  ('err', '-1')  ('err', '-1')    ('err', '-1')                  ('err', '-1')  ('err', '-1')  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('err', '-1')      ('err', '-1')  ('epsilon', '11')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('statement statements', '11')                                              ('err', '-1')                  ('statement statements', '11')                ('statement statements', '11')                                                                             ('statement statements', '11')            ('err', '-1')                             ('err', '-1')  ('err', '-1')   ('err', '-1')     ('err', '-1')                 ('err', '-1')
for_relation          ('err', '-1')                                                          ('err', '-1')  ('err', '-1')  ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                   ('err', '-1')                         ('err', '-1')      ('err', '-1')  ('err', '-1')    ('err', '-1')                  ('err', '-1')  ('err', '-1')  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')     ('err', '-1')     ('<', '21')       ('>', '21')       ('<=', '21')      ('>=', '21')      ('err', '-1')                                                               ('err', '-1')                  ('err', '-1')                                 ('err', '-1')                                                                                              ('err', '-1')                             ('err', '-1')                             ('err', '-1')  ('err', '-1')   ('err', '-1')     ('err', '-1')                 ('err', '-1')
variableExist         ('declare_rule', '20')                                                 ('err', '-1')  ('err', '-1')  ('declare_rule', '20')             ('declare_rule', '20')             ('declare_rule', '20')             ('declare_rule', '20')             ('err', '-1')                   ('err', '-1')                         ('err', '-1')      ('err', '-1')  ('err', '-1')    ('err', '-1')                  ('err', '-1')  ('err', '-1')  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')                                                               ('err', '-1')                  ('err', '-1')                                 ('err', '-1')                                                                                              ('identifier', '20')                      ('err', '-1')                             ('err', '-1')  ('err', '-1')   ('err', '-1')     ('err', '-1')                 ('err', '-1')
do_smth               ('err', '-1')                                                          ('err', '-1')  ('err', '-1')  ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                   ('err', '-1')                         ('err', '-1')      ('err', '-1')  ('err', '-1')    ('+ constant', '22')           ('++', '22')   ('--', '22')   ('- constant', '22')           ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')                                                               ('err', '-1')                  ('err', '-1')                                 ('err', '-1')                                                                                              ('err', '-1')                             ('err', '-1')                             ('err', '-1')  ('err', '-1')   ('err', '-1')     ('err', '-1')                 ('err', '-1')
else_statement        ('err', '-1')                                                          ('err', '-1')  ('err', '-1')  ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('epsilon', '15')               ('epsilon', '15')                     ('epsilon', '15')  ('err', '-1')  ('err', '-1')    ('err', '-1')                  ('err', '-1')  ('err', '-1')  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('err', '-1')      ('err', '-1')  ('epsilon', '15')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('epsilon', '15')                                                           ('else { statements }', '15')  ('epsilon', '15')                             ('epsilon', '15')                                                                                          ('epsilon', '15')                         ('err', '-1')                             ('err', '-1')  ('err', '-1')   ('err', '-1')     ('err', '-1')                 ('err', '-1')
condition             ('err', '-1')                                                          ('err', '-1')  ('err', '-1')  ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                   ('err', '-1')                         ('err', '-1')      ('err', '-1')  ('err', '-1')    ('err', '-1')                  ('err', '-1')  ('err', '-1')  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')                                                               ('err', '-1')                  ('err', '-1')                                 ('err', '-1')                                                                                              ('expression relation expression', '17')  ('expression relation expression', '17')  ('err', '-1')  ('err', '-1')   ('err', '-1')     ('err', '-1')                 ('err', '-1')
relation              ('err', '-1')                                                          ('err', '-1')  ('err', '-1')  ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                   ('err', '-1')                         ('err', '-1')      ('err', '-1')  ('err', '-1')    ('err', '-1')                  ('err', '-1')  ('err', '-1')  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('==', '18')      ('!=', '18')      ('<', '18')       ('>', '18')       ('<=', '18')      ('>=', '18')      ('err', '-1')                                                               ('err', '-1')                  ('err', '-1')                                 ('err', '-1')                                                                                              ('err', '-1')                             ('err', '-1')                             ('err', '-1')  ('err', '-1')   ('err', '-1')     ('err', '-1')                 ('err', '-1')
else_if_statement     ('err', '-1')                                                          ('err', '-1')  ('err', '-1')  ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('epsilon', '14')               ('epsilon', '14')                     ('epsilon', '14')  ('err', '-1')  ('err', '-1')    ('err', '-1')                  ('err', '-1')  ('err', '-1')  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('err', '-1')      ('err', '-1')  ('epsilon', '14')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('epsilon', '14')                                                           ('epsilon', '14')              ('epsilon', '14')                             ('epsilon', '14')                                                                                          ('epsilon', '14')                         ('err', '-1')                             ('err', '-1')  ('err', '-1')   ('err', '-1')     ('err', '-1')                 ('err', '-1')
int                   ('pop', '0')                                                           ('err', '-1')  ('err', '-1')  ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                   ('err', '-1')                         ('err', '-1')      ('err', '-1')  ('err', '-1')    ('err', '-1')                  ('err', '-1')  ('err', '-1')  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')                                                               ('err', '-1')                  ('err', '-1')                                 ('err', '-1')                                                                                              ('err', '-1')                             ('err', '-1')                             ('err', '-1')  ('err', '-1')   ('err', '-1')     ('err', '-1')                 ('err', '-1')
main                  ('err', '-1')                                                          ('pop', '0')   ('err', '-1')  ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                   ('err', '-1')                         ('err', '-1')      ('err', '-1')  ('err', '-1')    ('err', '-1')                  ('err', '-1')  ('err', '-1')  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')                                                               ('err', '-1')                  ('err', '-1')                                 ('err', '-1')                                                                                              ('err', '-1')                             ('err', '-1')                             ('err', '-1')  ('err', '-1')   ('err', '-1')     ('err', '-1')                 ('err', '-1')
args                  ('err', '-1')                                                          ('err', '-1')  ('pop', '0')   ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                   ('err', '-1')                         ('err', '-1')      ('err', '-1')  ('err', '-1')    ('err', '-1')                  ('err', '-1')  ('err', '-1')  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')                                                               ('err', '-1')                  ('err', '-1')                                 ('err', '-1')                                                                                              ('err', '-1')                             ('err', '-1')                             ('err', '-1')  ('err', '-1')   ('err', '-1')     ('err', '-1')                 ('err', '-1')
float                 ('err', '-1')                                                          ('err', '-1')  ('err', '-1')  ('pop', '0')                       ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                   ('err', '-1')                         ('err', '-1')      ('err', '-1')  ('err', '-1')    ('err', '-1')                  ('err', '-1')  ('err', '-1')  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')                                                               ('err', '-1')                  ('err', '-1')                                 ('err', '-1')                                                                                              ('err', '-1')                             ('err', '-1')                             ('err', '-1')  ('err', '-1')   ('err', '-1')     ('err', '-1')                 ('err', '-1')
boolean               ('err', '-1')                                                          ('err', '-1')  ('err', '-1')  ('err', '-1')                      ('pop', '0')                       ('err', '-1')                      ('err', '-1')                      ('err', '-1')                   ('err', '-1')                         ('err', '-1')      ('err', '-1')  ('err', '-1')    ('err', '-1')                  ('err', '-1')  ('err', '-1')  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')                                                               ('err', '-1')                  ('err', '-1')                                 ('err', '-1')                                                                                              ('err', '-1')                             ('err', '-1')                             ('err', '-1')  ('err', '-1')   ('err', '-1')     ('err', '-1')                 ('err', '-1')
char                  ('err', '-1')                                                          ('err', '-1')  ('err', '-1')  ('err', '-1')                      ('err', '-1')                      ('pop', '0')                       ('err', '-1')                      ('err', '-1')                   ('err', '-1')                         ('err', '-1')      ('err', '-1')  ('err', '-1')    ('err', '-1')                  ('err', '-1')  ('err', '-1')  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')                                                               ('err', '-1')                  ('err', '-1')                                 ('err', '-1')                                                                                              ('err', '-1')                             ('err', '-1')                             ('err', '-1')  ('err', '-1')   ('err', '-1')     ('err', '-1')                 ('err', '-1')
string                ('err', '-1')                                                          ('err', '-1')  ('err', '-1')  ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('pop', '0')                       ('err', '-1')                   ('err', '-1')                         ('err', '-1')      ('err', '-1')  ('err', '-1')    ('err', '-1')                  ('err', '-1')  ('err', '-1')  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')                                                               ('err', '-1')                  ('err', '-1')                                 ('err', '-1')                                                                                              ('err', '-1')                             ('err', '-1')                             ('err', '-1')  ('err', '-1')   ('err', '-1')     ('err', '-1')                 ('err', '-1')
input                 ('err', '-1')                                                          ('err', '-1')  ('err', '-1')  ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('pop', '0')                    ('err', '-1')                         ('err', '-1')      ('err', '-1')  ('err', '-1')    ('err', '-1')                  ('err', '-1')  ('err', '-1')  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')                                                               ('err', '-1')                  ('err', '-1')                                 ('err', '-1')                                                                                              ('err', '-1')                             ('err', '-1')                             ('err', '-1')  ('err', '-1')   ('err', '-1')     ('err', '-1')                 ('err', '-1')
print                 ('err', '-1')                                                          ('err', '-1')  ('err', '-1')  ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                   ('pop', '0')                          ('err', '-1')      ('err', '-1')  ('err', '-1')    ('err', '-1')                  ('err', '-1')  ('err', '-1')  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')                                                               ('err', '-1')                  ('err', '-1')                                 ('err', '-1')                                                                                              ('err', '-1')                             ('err', '-1')                             ('err', '-1')  ('err', '-1')   ('err', '-1')     ('err', '-1')                 ('err', '-1')
return                ('err', '-1')                                                          ('err', '-1')  ('err', '-1')  ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                   ('err', '-1')                         ('pop', '0')       ('err', '-1')  ('err', '-1')    ('err', '-1')                  ('err', '-1')  ('err', '-1')  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')                                                               ('err', '-1')                  ('err', '-1')                                 ('err', '-1')                                                                                              ('err', '-1')                             ('err', '-1')                             ('err', '-1')  ('err', '-1')   ('err', '-1')     ('err', '-1')                 ('err', '-1')
Add                   ('err', '-1')                                                          ('err', '-1')  ('err', '-1')  ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                   ('err', '-1')                         ('err', '-1')      ('pop', '0')   ('err', '-1')    ('err', '-1')                  ('err', '-1')  ('err', '-1')  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')                                                               ('err', '-1')                  ('err', '-1')                                 ('err', '-1')                                                                                              ('err', '-1')                             ('err', '-1')                             ('err', '-1')  ('err', '-1')   ('err', '-1')     ('err', '-1')                 ('err', '-1')
=                     ('err', '-1')                                                          ('err', '-1')  ('err', '-1')  ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                   ('err', '-1')                         ('err', '-1')      ('err', '-1')  ('pop', '0')     ('err', '-1')                  ('err', '-1')  ('err', '-1')  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')                                                               ('err', '-1')                  ('err', '-1')                                 ('err', '-1')                                                                                              ('err', '-1')                             ('err', '-1')                             ('err', '-1')  ('err', '-1')   ('err', '-1')     ('err', '-1')                 ('err', '-1')
+                     ('err', '-1')                                                          ('err', '-1')  ('err', '-1')  ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                   ('err', '-1')                         ('err', '-1')      ('err', '-1')  ('err', '-1')    ('pop', '0')                   ('err', '-1')  ('err', '-1')  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')                                                               ('err', '-1')                  ('err', '-1')                                 ('err', '-1')                                                                                              ('err', '-1')                             ('err', '-1')                             ('err', '-1')  ('err', '-1')   ('err', '-1')     ('err', '-1')                 ('err', '-1')
++                    ('err', '-1')                                                          ('err', '-1')  ('err', '-1')  ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                   ('err', '-1')                         ('err', '-1')      ('err', '-1')  ('err', '-1')    ('err', '-1')                  ('pop', '0')   ('err', '-1')  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')                                                               ('err', '-1')                  ('err', '-1')                                 ('err', '-1')                                                                                              ('err', '-1')                             ('err', '-1')                             ('err', '-1')  ('err', '-1')   ('err', '-1')     ('err', '-1')                 ('err', '-1')
--                    ('err', '-1')                                                          ('err', '-1')  ('err', '-1')  ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                   ('err', '-1')                         ('err', '-1')      ('err', '-1')  ('err', '-1')    ('err', '-1')                  ('err', '-1')  ('pop', '0')   ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')                                                               ('err', '-1')                  ('err', '-1')                                 ('err', '-1')                                                                                              ('err', '-1')                             ('err', '-1')                             ('err', '-1')  ('err', '-1')   ('err', '-1')     ('err', '-1')                 ('err', '-1')
-                     ('err', '-1')                                                          ('err', '-1')  ('err', '-1')  ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                   ('err', '-1')                         ('err', '-1')      ('err', '-1')  ('err', '-1')    ('err', '-1')                  ('err', '-1')  ('err', '-1')  ('pop', '0')                   ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')                                                               ('err', '-1')                  ('err', '-1')                                 ('err', '-1')                                                                                              ('err', '-1')                             ('err', '-1')                             ('err', '-1')  ('err', '-1')   ('err', '-1')     ('err', '-1')                 ('err', '-1')
*                     ('err', '-1')                                                          ('err', '-1')  ('err', '-1')  ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                   ('err', '-1')                         ('err', '-1')      ('err', '-1')  ('err', '-1')    ('err', '-1')                  ('err', '-1')  ('err', '-1')  ('err', '-1')                  ('pop', '0')                   ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')                                                               ('err', '-1')                  ('err', '-1')                                 ('err', '-1')                                                                                              ('err', '-1')                             ('err', '-1')                             ('err', '-1')  ('err', '-1')   ('err', '-1')     ('err', '-1')                 ('err', '-1')
/                     ('err', '-1')                                                          ('err', '-1')  ('err', '-1')  ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                   ('err', '-1')                         ('err', '-1')      ('err', '-1')  ('err', '-1')    ('err', '-1')                  ('err', '-1')  ('err', '-1')  ('err', '-1')                  ('err', '-1')                  ('pop', '0')                   ('err', '-1')                  ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')                                                               ('err', '-1')                  ('err', '-1')                                 ('err', '-1')                                                                                              ('err', '-1')                             ('err', '-1')                             ('err', '-1')  ('err', '-1')   ('err', '-1')     ('err', '-1')                 ('err', '-1')
%                     ('err', '-1')                                                          ('err', '-1')  ('err', '-1')  ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                   ('err', '-1')                         ('err', '-1')      ('err', '-1')  ('err', '-1')    ('err', '-1')                  ('err', '-1')  ('err', '-1')  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('pop', '0')                   ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')                                                               ('err', '-1')                  ('err', '-1')                                 ('err', '-1')                                                                                              ('err', '-1')                             ('err', '-1')                             ('err', '-1')  ('err', '-1')   ('err', '-1')     ('err', '-1')                 ('err', '-1')
(                     ('err', '-1')                                                          ('err', '-1')  ('err', '-1')  ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                   ('err', '-1')                         ('err', '-1')      ('err', '-1')  ('err', '-1')    ('err', '-1')                  ('err', '-1')  ('err', '-1')  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('pop', '0')   ('err', '-1')      ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')                                                               ('err', '-1')                  ('err', '-1')                                 ('err', '-1')                                                                                              ('err', '-1')                             ('err', '-1')                             ('err', '-1')  ('err', '-1')   ('err', '-1')     ('err', '-1')                 ('err', '-1')
)                     ('err', '-1')                                                          ('err', '-1')  ('err', '-1')  ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                   ('err', '-1')                         ('err', '-1')      ('err', '-1')  ('err', '-1')    ('err', '-1')                  ('err', '-1')  ('err', '-1')  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('pop', '0')       ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')                                                               ('err', '-1')                  ('err', '-1')                                 ('err', '-1')                                                                                              ('err', '-1')                             ('err', '-1')                             ('err', '-1')  ('err', '-1')   ('err', '-1')     ('err', '-1')                 ('err', '-1')
{                     ('err', '-1')                                                          ('err', '-1')  ('err', '-1')  ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                   ('err', '-1')                         ('err', '-1')      ('err', '-1')  ('err', '-1')    ('err', '-1')                  ('err', '-1')  ('err', '-1')  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('err', '-1')      ('pop', '0')   ('err', '-1')      ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')                                                               ('err', '-1')                  ('err', '-1')                                 ('err', '-1')                                                                                              ('err', '-1')                             ('err', '-1')                             ('err', '-1')  ('err', '-1')   ('err', '-1')     ('err', '-1')                 ('err', '-1')
}                     ('err', '-1')                                                          ('err', '-1')  ('err', '-1')  ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                   ('err', '-1')                         ('err', '-1')      ('err', '-1')  ('err', '-1')    ('err', '-1')                  ('err', '-1')  ('err', '-1')  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('err', '-1')      ('err', '-1')  ('pop', '0')       ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')                                                               ('err', '-1')                  ('err', '-1')                                 ('err', '-1')                                                                                              ('err', '-1')                             ('err', '-1')                             ('err', '-1')  ('err', '-1')   ('err', '-1')     ('err', '-1')                 ('err', '-1')
"                     ('err', '-1')                                                          ('err', '-1')  ('err', '-1')  ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                   ('err', '-1')                         ('err', '-1')      ('err', '-1')  ('err', '-1')    ('err', '-1')                  ('err', '-1')  ('err', '-1')  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')      ('pop', '0')   ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')                                                               ('err', '-1')                  ('err', '-1')                                 ('err', '-1')                                                                                              ('err', '-1')                             ('err', '-1')                             ('err', '-1')  ('err', '-1')   ('err', '-1')     ('err', '-1')                 ('err', '-1')
'                     ('err', '-1')                                                          ('err', '-1')  ('err', '-1')  ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                   ('err', '-1')                         ('err', '-1')      ('err', '-1')  ('err', '-1')    ('err', '-1')                  ('err', '-1')  ('err', '-1')  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')      ('err', '-1')  ('pop', '0')   ('err', '-1')  ('err', '-1')  ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')                                                               ('err', '-1')                  ('err', '-1')                                 ('err', '-1')                                                                                              ('err', '-1')                             ('err', '-1')                             ('err', '-1')  ('err', '-1')   ('err', '-1')     ('err', '-1')                 ('err', '-1')
||                    ('err', '-1')                                                          ('err', '-1')  ('err', '-1')  ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                   ('err', '-1')                         ('err', '-1')      ('err', '-1')  ('err', '-1')    ('err', '-1')                  ('err', '-1')  ('err', '-1')  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')  ('pop', '0')   ('err', '-1')  ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')                                                               ('err', '-1')                  ('err', '-1')                                 ('err', '-1')                                                                                              ('err', '-1')                             ('err', '-1')                             ('err', '-1')  ('err', '-1')   ('err', '-1')     ('err', '-1')                 ('err', '-1')
&&                    ('err', '-1')                                                          ('err', '-1')  ('err', '-1')  ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                   ('err', '-1')                         ('err', '-1')      ('err', '-1')  ('err', '-1')    ('err', '-1')                  ('err', '-1')  ('err', '-1')  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')  ('err', '-1')  ('pop', '0')   ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')                                                               ('err', '-1')                  ('err', '-1')                                 ('err', '-1')                                                                                              ('err', '-1')                             ('err', '-1')                             ('err', '-1')  ('err', '-1')   ('err', '-1')     ('err', '-1')                 ('err', '-1')
==                    ('err', '-1')                                                          ('err', '-1')  ('err', '-1')  ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                   ('err', '-1')                         ('err', '-1')      ('err', '-1')  ('err', '-1')    ('err', '-1')                  ('err', '-1')  ('err', '-1')  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('pop', '0')      ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')                                                               ('err', '-1')                  ('err', '-1')                                 ('err', '-1')                                                                                              ('err', '-1')                             ('err', '-1')                             ('err', '-1')  ('err', '-1')   ('err', '-1')     ('err', '-1')                 ('err', '-1')
!=                    ('err', '-1')                                                          ('err', '-1')  ('err', '-1')  ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                   ('err', '-1')                         ('err', '-1')      ('err', '-1')  ('err', '-1')    ('err', '-1')                  ('err', '-1')  ('err', '-1')  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')     ('pop', '0')      ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')                                                               ('err', '-1')                  ('err', '-1')                                 ('err', '-1')                                                                                              ('err', '-1')                             ('err', '-1')                             ('err', '-1')  ('err', '-1')   ('err', '-1')     ('err', '-1')                 ('err', '-1')
<                     ('err', '-1')                                                          ('err', '-1')  ('err', '-1')  ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                   ('err', '-1')                         ('err', '-1')      ('err', '-1')  ('err', '-1')    ('err', '-1')                  ('err', '-1')  ('err', '-1')  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')     ('err', '-1')     ('pop', '0')      ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')                                                               ('err', '-1')                  ('err', '-1')                                 ('err', '-1')                                                                                              ('err', '-1')                             ('err', '-1')                             ('err', '-1')  ('err', '-1')   ('err', '-1')     ('err', '-1')                 ('err', '-1')
>                     ('err', '-1')                                                          ('err', '-1')  ('err', '-1')  ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                   ('err', '-1')                         ('err', '-1')      ('err', '-1')  ('err', '-1')    ('err', '-1')                  ('err', '-1')  ('err', '-1')  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')     ('err', '-1')     ('err', '-1')     ('pop', '0')      ('err', '-1')     ('err', '-1')     ('err', '-1')                                                               ('err', '-1')                  ('err', '-1')                                 ('err', '-1')                                                                                              ('err', '-1')                             ('err', '-1')                             ('err', '-1')  ('err', '-1')   ('err', '-1')     ('err', '-1')                 ('err', '-1')
<=                    ('err', '-1')                                                          ('err', '-1')  ('err', '-1')  ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                   ('err', '-1')                         ('err', '-1')      ('err', '-1')  ('err', '-1')    ('err', '-1')                  ('err', '-1')  ('err', '-1')  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('pop', '0')      ('err', '-1')     ('err', '-1')                                                               ('err', '-1')                  ('err', '-1')                                 ('err', '-1')                                                                                              ('err', '-1')                             ('err', '-1')                             ('err', '-1')  ('err', '-1')   ('err', '-1')     ('err', '-1')                 ('err', '-1')
>=                    ('err', '-1')                                                          ('err', '-1')  ('err', '-1')  ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                   ('err', '-1')                         ('err', '-1')      ('err', '-1')  ('err', '-1')    ('err', '-1')                  ('err', '-1')  ('err', '-1')  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('pop', '0')      ('err', '-1')                                                               ('err', '-1')                  ('err', '-1')                                 ('err', '-1')                                                                                              ('err', '-1')                             ('err', '-1')                             ('err', '-1')  ('err', '-1')   ('err', '-1')     ('err', '-1')                 ('err', '-1')
if                    ('err', '-1')                                                          ('err', '-1')  ('err', '-1')  ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                   ('err', '-1')                         ('err', '-1')      ('err', '-1')  ('err', '-1')    ('err', '-1')                  ('err', '-1')  ('err', '-1')  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('pop', '0')                                                                ('err', '-1')                  ('err', '-1')                                 ('err', '-1')                                                                                              ('err', '-1')                             ('err', '-1')                             ('err', '-1')  ('err', '-1')   ('err', '-1')     ('err', '-1')                 ('err', '-1')
else                  ('err', '-1')                                                          ('err', '-1')  ('err', '-1')  ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                   ('err', '-1')                         ('err', '-1')      ('err', '-1')  ('err', '-1')    ('err', '-1')                  ('err', '-1')  ('err', '-1')  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')                                                               ('pop', '0')                   ('err', '-1')                                 ('err', '-1')                                                                                              ('err', '-1')                             ('err', '-1')                             ('err', '-1')  ('err', '-1')   ('err', '-1')     ('err', '-1')                 ('err', '-1')
while                 ('err', '-1')                                                          ('err', '-1')  ('err', '-1')  ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                   ('err', '-1')                         ('err', '-1')      ('err', '-1')  ('err', '-1')    ('err', '-1')                  ('err', '-1')  ('err', '-1')  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')                                                               ('err', '-1')                  ('pop', '0')                                  ('err', '-1')                                                                                              ('err', '-1')                             ('err', '-1')                             ('err', '-1')  ('err', '-1')   ('err', '-1')     ('err', '-1')                 ('err', '-1')
for                   ('err', '-1')                                                          ('err', '-1')  ('err', '-1')  ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                   ('err', '-1')                         ('err', '-1')      ('err', '-1')  ('err', '-1')    ('err', '-1')                  ('err', '-1')  ('err', '-1')  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')                                                               ('err', '-1')                  ('err', '-1')                                 ('pop', '0')                                                                                               ('err', '-1')                             ('err', '-1')                             ('err', '-1')  ('err', '-1')   ('err', '-1')     ('err', '-1')                 ('err', '-1')
identifier            ('err', '-1')                                                          ('err', '-1')  ('err', '-1')  ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                   ('err', '-1')                         ('err', '-1')      ('err', '-1')  ('err', '-1')    ('err', '-1')                  ('err', '-1')  ('err', '-1')  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')                                                               ('err', '-1')                  ('err', '-1')                                 ('err', '-1')                                                                                              ('pop', '0')                              ('err', '-1')                             ('err', '-1')  ('err', '-1')   ('err', '-1')     ('err', '-1')                 ('err', '-1')
constant              ('err', '-1')                                                          ('err', '-1')  ('err', '-1')  ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                   ('err', '-1')                         ('err', '-1')      ('err', '-1')  ('err', '-1')    ('err', '-1')                  ('err', '-1')  ('err', '-1')  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')                                                               ('err', '-1')                  ('err', '-1')                                 ('err', '-1')                                                                                              ('err', '-1')                             ('pop', '0')                              ('err', '-1')  ('err', '-1')   ('err', '-1')     ('err', '-1')                 ('err', '-1')
True                  ('err', '-1')                                                          ('err', '-1')  ('err', '-1')  ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                   ('err', '-1')                         ('err', '-1')      ('err', '-1')  ('err', '-1')    ('err', '-1')                  ('err', '-1')  ('err', '-1')  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')                                                               ('err', '-1')                  ('err', '-1')                                 ('err', '-1')                                                                                              ('err', '-1')                             ('err', '-1')                             ('pop', '0')   ('err', '-1')   ('err', '-1')     ('err', '-1')                 ('err', '-1')
False                 ('err', '-1')                                                          ('err', '-1')  ('err', '-1')  ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                   ('err', '-1')                         ('err', '-1')      ('err', '-1')  ('err', '-1')    ('err', '-1')                  ('err', '-1')  ('err', '-1')  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')                                                               ('err', '-1')                  ('err', '-1')                                 ('err', '-1')                                                                                              ('err', '-1')                             ('err', '-1')                             ('err', '-1')  ('pop', '0')    ('err', '-1')     ('err', '-1')                 ('err', '-1')
;                     ('err', '-1')                                                          ('err', '-1')  ('err', '-1')  ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                   ('err', '-1')                         ('err', '-1')      ('err', '-1')  ('err', '-1')    ('err', '-1')                  ('err', '-1')  ('err', '-1')  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')                                                               ('err', '-1')                  ('err', '-1')                                 ('err', '-1')                                                                                              ('err', '-1')                             ('err', '-1')                             ('err', '-1')  ('err', '-1')   ('pop', '0')      ('err', '-1')                 ('err', '-1')
,                     ('err', '-1')                                                          ('err', '-1')  ('err', '-1')  ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                   ('err', '-1')                         ('err', '-1')      ('err', '-1')  ('err', '-1')    ('err', '-1')                  ('err', '-1')  ('err', '-1')  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')                                                               ('err', '-1')                  ('err', '-1')                                 ('err', '-1')                                                                                              ('err', '-1')                             ('err', '-1')                             ('err', '-1')  ('err', '-1')   ('err', '-1')     ('pop', '0')                  ('err', '-1')
$                     ('err', '-1')                                                          ('err', '-1')  ('err', '-1')  ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                      ('err', '-1')                   ('err', '-1')                         ('err', '-1')      ('err', '-1')  ('err', '-1')    ('err', '-1')                  ('err', '-1')  ('err', '-1')  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')                  ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')      ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')  ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')     ('err', '-1')                                                               ('err', '-1')                  ('err', '-1')                                 ('err', '-1')                                                                                              ('err', '-1')                             ('err', '-1')                             ('err', '-1')  ('err', '-1')   ('err', '-1')     ('err', '-1')                 ('acc', '100')